{"version":3,"sources":["ng://netconf-lib/lib/services/configuration.service.ts","ng://netconf-lib/lib/netconf-lib.service.ts","node_modules/tslib/tslib.es6.js","ng://netconf-lib/lib/netconf-lib.component.ts","ng://netconf-lib/lib/services/device.service.ts","ng://netconf-lib/lib/components/device-quickswitch.component.ts","ng://netconf-lib/lib/services/session.service.ts","ng://netconf-lib/lib/components/device-selection.component.ts","ng://netconf-lib/lib/components/subcomponents/device-selection-item.component.ts","ng://netconf-lib/lib/components/content-box.component.ts","ng://netconf-lib/lib/components/popup.component.ts","ng://netconf-lib/lib/services/schemas.service.ts","ng://netconf-lib/lib/components/schema-list/schema-list.component.ts","ng://netconf-lib/lib/netconf-lib.module.ts"],"names":["ConfigurationService","prototype","editConfig","device","target","config","commitChanges","Injectable","args","providedIn","NetconfLibService","provideExample","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","NetconfLibComponent","ngOnInit","Component","selector","template","DeviceService","http","this","_connectedDevices","connectedDevicesChanged","EventEmitter","Object","defineProperty","emit","getConnectedDevices","connectedDevices","getSavedDevices","get","saveDevice","hostname","port","username","deviceName","password","connect","dev","fingerprint","id","name","connectToDevice","subscribe","post","body","getCompatibleDevices","filter","HttpClient","DeviceQuickswitchComponent","deviceService","schemaFilter","vertical","compatibleDevices","Input","SessionService","_sessions","sessionsChanged","console","log","addSession","key","doesSessionExists","idx","findSessionIndex","sessions","destroySession","_this","delete","pipe","tap","splice","loadOpenSessions","destroyAllSessions","sessionAlive","_b","tslib_1.__values","_c","findIndex","getCompatibleDeviceSessions","DeviceSelectionComponent","sessionService","devicesSelected","errorMessage","reload","areDevicesSelected","selected","setAllSelectionsTo","val","submit","selectedDevices","d","session","ses","ses_1","ses_1_1","sessions_1","sessions_1_1","Output","DeviceSelectionItemComponent","selectedChange","changeSelection","ContentBoxComponent","title","limitWidth","PopupComponent","toolbox","submitBtnText","canceled","submitted","cancel","SchemasService","newlineToBr","message","entityMap","&","<",">","\"","'","/","replace","getSchemaNames","getSchema","schemaName","SchemaListComponent","schemasService","loading","schemas","names","err","sharedComponents","NetconfLibModule","NgModule","imports","CommonModule","RouterModule","HttpClientModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Device} from '../classes/device';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigurationService {\r\n\r\n  public editConfig(device: Device, target: string, config: object) {\r\n    return;\r\n  }\r\n\r\n  public commitChanges(device: Device) {\r\n    return;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Device} from './classes/device';\nimport {Session} from './classes/session';\n\nexport * from './services/configuration.service';\n// export * from './services/device.service';\n// export * from './services/session.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetconfLibService {\n\n  constructor() {\n  }\n\n  public provideExample(): string {\n    return 'Example service works!';\n  }\n\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-nc',\n  template: `\n    <p>\n      netconf-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class NetconfLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {Device} from '../classes/device';\r\nimport {Observable, of} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {GenericServerResponse} from '../classes/GenericServerResponse';\r\nimport {Session} from '../classes/session';\r\n\r\n@Injectable()\r\nexport class DeviceService {\r\n  constructor(public http: HttpClient) {\r\n  }\r\n\r\n  get connectedDevices(): Device[] {\r\n    return this._connectedDevices;\r\n  }\r\n\r\n  set connectedDevices(value: Device[]) {\r\n    this._connectedDevices = value;\r\n    this.connectedDevicesChanged.emit(value);\r\n  }\r\n\r\n  private _connectedDevices: Device[] = [];\r\n\r\n  public connectedDevicesChanged: EventEmitter<Device[]> = new EventEmitter<Device[]>();\r\n\r\n  public getConnectedDevices(): Device[] {\r\n    return this.connectedDevices;\r\n  }\r\n\r\n  public getSavedDevices(): Observable<Device[]> {\r\n    return this.http.get<Device[]>('/netconf/devices');\r\n  }\r\n\r\n\r\n  public saveDevice(hostname: string,\r\n                    port: number,\r\n                    username: string,\r\n                    deviceName = '',\r\n                    password = '',\r\n                    connect = false): Observable<object> {\r\n    const dev: Device = {\r\n      fingerprint: '',\r\n      id: '',\r\n      name: deviceName,\r\n      hostname,\r\n      port,\r\n      username,\r\n      password\r\n    };\r\n\r\n    if (connect) {\r\n      this.connectToDevice(dev).subscribe(); // TODO: Show 'now connecting' modal window\r\n    }\r\n    return this.http.post<object>('/netconf/device', {device: dev});\r\n  }\r\n\r\n  public connectToDevice(device: Device) {\r\n    const body = {\r\n      'name': device.name,\r\n      'hostname': device.hostname,\r\n      'port': device.port,\r\n      'username': device.username,\r\n      'password': device.password\r\n    };\r\n    return this.http.post('/netconf/connect', body);\r\n  }\r\n\r\n  /**\r\n   * Filter is xpath (?)\r\n   */\r\n  public getCompatibleDevices(filter: any): Device[] {\r\n    return this.connectedDevices;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport {DeviceService} from '../services/device.service';\r\nimport {Device} from '../classes/device';\r\n\r\n@Component({\r\n  selector: 'lib-device-quickswitch',\r\n  template: `\r\n    <p>\r\n      tbd\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class DeviceQuickswitchComponent implements OnInit {\r\n\r\n  @Input() schemaFilter = '';\r\n  @Input() vertical = false;\r\n  compatibleDevices: Device[] = [];\r\n\r\n  constructor(private deviceService: DeviceService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {GenericServerResponse} from '../classes/GenericServerResponse';\r\nimport {Session} from '../classes/session';\r\nimport {Device} from '../classes/device';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n\r\n  get sessions(): Session[] {\r\n    console.log('Getting sessions');\r\n    console.log(this._sessions);\r\n    return this._sessions;\r\n  }\r\n\r\n  set sessions(value: Session[]) {\r\n    console.log('Setting sessions');\r\n    console.log(value);\r\n    this._sessions = value;\r\n    this.sessionsChanged.emit(value);\r\n  }\r\n\r\n  constructor(public http: HttpClient) {\r\n    console.log('CONSTRUCTOR OF SESSION SERVICE CALLED');\r\n  }\r\n\r\n  private _sessions: Session[] = [];\r\n\r\n  public sessionsChanged: EventEmitter<Session[]> = new EventEmitter<Session[]>();\r\n\r\n  addSession(key: string, device: Device) {\r\n    if (!this.doesSessionExists(key)) {\r\n      const sessions = this.sessions;\r\n      sessions.push({\r\n        key, device\r\n      });\r\n      this.sessions = sessions;\r\n    } else {\r\n      const idx = this.findSessionIndex(key);\r\n      this._sessions[idx].device = device;\r\n      this.sessionsChanged.emit(this.sessions);\r\n    }\r\n  }\r\n\r\n\r\n  destroySession(key: string) {\r\n    const idx = this.findSessionIndex(key);\r\n    return this.http.delete('/netconf/session/' + key)\r\n      .pipe(\r\n        tap(\r\n          next => {\r\n            this._sessions.splice(idx, 1);\r\n            this.sessionsChanged.emit(this.sessions);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  loadOpenSessions(): Observable<Session[]> {\r\n    return this.http.get<Session[]>('/netconf/sessions');\r\n  }\r\n\r\n  destroyAllSessions() {\r\n    return this.http.delete('/netconf/sessions');\r\n  }\r\n\r\n  /**\r\n   *  Check if session exists on the server.\r\n   */\r\n  sessionAlive(key: string): Observable<GenericServerResponse> {\r\n    /*const params = new HttpParams()\r\n      .append('key', key);*/\r\n    return this.http.get<GenericServerResponse>('/netconf/session/alive/' + key);\r\n  }\r\n\r\n\r\n  doesSessionExists(key: string): Boolean {\r\n    for (const session of this._sessions) {\r\n      if (session.key === key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  findSessionIndex(key: string): number {\r\n    return this._sessions.findIndex(s => s.key === key);\r\n  }\r\n\r\n  /**\r\n   * Filter is xpath (?)\r\n   */\r\n  public getCompatibleDeviceSessions(filter: any): Session[] {\r\n    // TODO: Filter\r\n    console.log('Getting compatible sessions');\r\n    console.log(this.sessions);\r\n    return this.sessions;\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\nimport {SessionService} from '../services/session.service';\r\nimport {Session} from '../classes/session';\r\n\r\n@Component({\r\n  selector: 'lib-device-selection',\r\n  templateUrl: './device-selection.component.html',\r\n  styleUrls: ['./device-selection.component.scss'],\r\n})\r\nexport class DeviceSelectionComponent implements OnInit {\r\n\r\n  @Input() schemaFilter = '';\r\n  @Output() devicesSelected: EventEmitter<Session[]> = new EventEmitter<Session[]>();\r\n  compatibleDevices: {session: Session, selected: boolean}[] = [];\r\n\r\n  errorMessage = '';\r\n\r\n  constructor(public sessionService: SessionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.reload();\r\n  }\r\n\r\n  /**\r\n   * Returns true, if there is at least one device selected. Returns false otherwise.\r\n   */\r\n  areDevicesSelected(): boolean {\r\n    for (const d of this.compatibleDevices) {\r\n      if (d.selected) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setAllSelectionsTo(val: boolean) {\r\n    for (const d of this.compatibleDevices) {\r\n      d.selected = val;\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    if (this.areDevicesSelected()) {\r\n      const selectedDevices: Session[] = [];\r\n      for (const d of this.compatibleDevices) {\r\n        if (d.selected) {\r\n          selectedDevices.push(d.session);\r\n        }\r\n      }\r\n      this.devicesSelected.emit(selectedDevices);\r\n      this.errorMessage = '';\r\n    } else {\r\n      this.errorMessage = 'No devices selected';\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    // const sessions = this.sessionService.getCompatibleDeviceSessions('');\r\n    const sessions = this.sessionService.sessions;\r\n    this.sessionService.sessionsChanged.subscribe(\r\n      ses => {\r\n        for (const s of ses) {\r\n          this.compatibleDevices.push({session: s, selected: true});\r\n        }\r\n      }\r\n    );\r\n    for (const s of sessions) {\r\n      this.compatibleDevices.push({session: s, selected: true});\r\n    }\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\nimport {Device} from '../../classes/device';\r\n\r\n\r\n@Component({\r\n  selector: 'lib-device-selection-item',\r\n  templateUrl: './device-selection-item.component.html',\r\n  styleUrls: ['../device-selection.component.scss']\r\n})\r\nexport class DeviceSelectionItemComponent implements OnInit {\r\n\r\n  @Input() device: Device;\r\n  @Input() selected: boolean;\r\n  @Output() selectedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  compatibleDevices: Device[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeSelection() {\r\n    this.selectedChange.emit(!this.selected);\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-content-box',\r\n  template: `\r\n    <div class=\"content-box\">\r\n      <div class=\"box-header\" *ngIf=\"title\">{{title}}</div>\r\n      <div class=\"box-content\" [class.box-content-limited]=\"limitWidth\">\r\n          <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./content-box.component.scss']\r\n})\r\nexport class ContentBoxComponent implements OnInit {\r\n\r\n  @Input() title = '';\r\n  @Input() limitWidth = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-nc-popup',\r\n  template: `\r\n    <div class=\"popup-wrapper\">\r\n      <div class=\"popup-content\">\r\n        <div *ngIf=\"title !== ''\" class=\"popup-header\">{{title}}</div>\r\n        <ng-content></ng-content>\r\n        <div class=\"popup-toolbox\" *ngIf=\"toolbox\">\r\n          <button class=\"btn btn-danger\" (click)=\"cancel()\">Cancel</button>\r\n          <button class=\"btn btn-primary float-right\" (click)=\"submit()\">{{submitBtnText}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./popup.component.scss']\r\n})\r\nexport class PopupComponent implements OnInit {\r\n\r\n  @Input() title = '';\r\n  @Input() toolbox = true;\r\n  @Input() submitBtnText = 'Submit';\r\n\r\n  @Output() canceled: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() submitted: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cancel() {\r\n    this.canceled.emit(true);\r\n  }\r\n\r\n  submit() {\r\n    this.submitted.emit(true);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchemasService {\n\n  constructor(private http: HttpClient) { }\n\n  static newlineToBr(message: string) {\n    const entityMap = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      '\\'': '&#39;',\n      '/': '&#x2F;'\n    };\n    return message.replace(/[&<>\"'\\/]/g, s => entityMap[s]).replace(/\\n/g, '<br>');\n  }\n\n  getSchemaNames(): Observable<string[]> {\n    return this.http.get<string[]>('/netconf/schemas');\n  }\n\n  getSchema(schemaName: string): Observable<string> {\n    return this.http.get<string>('/netconf/schema/' + schemaName);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SchemasService} from '../../services/schemas.service';\n\n@Component({\n  selector: 'lib-schema-list',\n  templateUrl: './schema-list.component.html',\n  styleUrls: ['./schema-list.component.scss']\n})\nexport class SchemaListComponent implements OnInit {\n\n  constructor(public schemasService: SchemasService) { }\n\n  loading = false;\n  error = '';\n  schemas: string[] = [];\n\n  ngOnInit() {\n    this.loading = true;\n    this.schemasService.getSchemaNames().subscribe(\n    names => {\n      this.schemas = names;\n      this.loading = false;\n    },\n    err => {\n        this.error = err.message;\n        this.loading = false;\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NetconfLibComponent } from './netconf-lib.component';\nimport {DeviceQuickswitchComponent} from './components/device-quickswitch.component';\nimport {DeviceSelectionComponent} from './components/device-selection.component';\nimport {DeviceSelectionItemComponent} from './components/subcomponents/device-selection-item.component';\nimport {ContentBoxComponent} from './components/content-box.component';\nimport {PopupComponent} from './components/popup.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DeviceService} from './services/device.service';\nimport {SchemaListComponent} from './components/schema-list/schema-list.component';\n\n\nconst sharedComponents = [\n  NetconfLibComponent,\n  DeviceQuickswitchComponent,\n  DeviceSelectionComponent,\n  DeviceSelectionItemComponent,\n  ContentBoxComponent,\n  PopupComponent,\n  SchemaListComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    HttpClientModule\n  ],\n  declarations: [ ...sharedComponents ],\n  exports: [ ...sharedComponents ],\n  providers: [\n    DeviceService\n  ]\n})\nexport class NetconfLibModule { }\n"]}