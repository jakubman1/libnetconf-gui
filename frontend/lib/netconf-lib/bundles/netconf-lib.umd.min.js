!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs"),require("socket.io-client"),require("@angular/common"),require("@angular/router"),require("@angular/core"),require("@angular/common/http")):"function"==typeof define&&define.amd?define("netconf-lib",["exports","rxjs","socket.io-client","@angular/common","@angular/router","@angular/core","@angular/common/http"],t):t(e["netconf-lib"]={},e.rxjs,e.socketIo,e.ng.common,e.ng.router,e.ng.core,e.ng.common.http)}(this,function(e,t,n,o,r,i,c){"use strict";var a=function(){function e(){console.log("initSocket "+window.location.origin),this.socket=n.io(window.location.origin)}return e.prototype.send=function(e,t){void 0===t&&(t=null),t?this.socket.emit(e,t):this.socket.emit(e)},e.prototype.subscribe=function(e){var n=this;return new t.Observable(function(t){n.socket.on(e,function(e){return t.next(e)})})},e.prototype.unsubscribe=function(e){this.socket.removeListener(e)},e.decorators=[{type:i.Injectable}],e.ctorParameters=function(){return[]},e}(),s=function(){function e(e){this.socketService=e}return e.prototype.editConfig=function(e,t,n){},e.prototype.commitChanges=function(e){},e.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:a}]},e.ngInjectableDef=i.defineInjectable({factory:function(){return new e(i.inject(a))},token:e,providedIn:"root"}),e}(),l=function(){function e(e){this.http=e,this._connectedDevices=[],this.connectedDevicesChanged=new i.EventEmitter}return Object.defineProperty(e.prototype,"connectedDevices",{get:function(){return this._connectedDevices},set:function(e){this._connectedDevices=e,this.connectedDevicesChanged.emit(e)},enumerable:!0,configurable:!0}),e.prototype.getConnectedDevices=function(){return this.connectedDevices},e.prototype.getSavedDevices=function(){return this.http.get("/netconf/devices")},e.prototype.saveDevice=function(e,t,n,o,r,i){void 0===o&&(o=""),void 0===r&&(r=""),void 0===i&&(i=!1);var c={fingerprint:"",id:-1,name:o,hostname:e,port:t,username:n,password:r};return i&&this.connectToDevice(c),this.http.post("/netconf/device",{device:c})},e.prototype.connectToDevice=function(e){this.connectedDevices.push(e)},e.prototype.getCompatibleDevices=function(e){return this.connectedDevices},e.decorators=[{type:i.Injectable}],e.ctorParameters=function(){return[{type:c.HttpClient}]},e}(),p=function(){function e(){}return e.prototype.provideExample=function(){return"Example service works!"},e.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=i.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}();function d(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],o=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function u(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,r,i=n.call(e),c=[];try{for(;(void 0===t||0<t--)&&!(o=i.next()).done;)c.push(o.value)}catch(a){r={error:a}}finally{try{o&&!o.done&&(n=i["return"])&&n.call(i)}finally{if(r)throw r.error}}return c}function b(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(u(arguments[t]));return e}var f=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:i.Component,args:[{selector:"lib-nc",template:"\n    <p>\n      netconf-lib works!\n    </p>\n  "}]}],e.ctorParameters=function(){return[]},e}(),m=function(){function e(e){this.deviceService=e,this.schemaFilter="",this.vertical=!1,this.compatibleDevices=[]}return e.prototype.ngOnInit=function(){},e.decorators=[{type:i.Component,args:[{selector:"lib-device-quickswitch",template:"\n    <p>\n      tbd\n    </p>\n  "}]}],e.ctorParameters=function(){return[{type:l}]},e.propDecorators={schemaFilter:[{type:i.Input}],vertical:[{type:i.Input}]},e}(),h=function(){function e(e){this.deviceService=e,this.schemaFilter="",this.devicesSelected=new i.EventEmitter,this.compatibleDevices=[],this.errorMessage=""}return e.prototype.ngOnInit=function(){var e,t,n=this.deviceService.getCompatibleDevices(this.schemaFilter);try{for(var o=d(n),r=o.next();!r.done;r=o.next()){var i=r.value;this.compatibleDevices.push({device:i,selected:!0})}}catch(c){e={error:c}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}},e.prototype.areDevicesSelected=function(){var e,t;try{for(var n=d(this.compatibleDevices),o=n.next();!o.done;o=n.next()){if(o.value.selected)return!0}}catch(r){e={error:r}}finally{try{o&&!o.done&&(t=n["return"])&&t.call(n)}finally{if(e)throw e.error}}return!1},e.prototype.setAllSelectionsTo=function(e){var t,n;try{for(var o=d(this.compatibleDevices),r=o.next();!r.done;r=o.next()){r.value.selected=e}}catch(i){t={error:i}}finally{try{r&&!r.done&&(n=o["return"])&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.submit=function(){var e,t;if(this.areDevicesSelected()){var n=[];try{for(var o=d(this.compatibleDevices),r=o.next();!r.done;r=o.next()){var i=r.value;i.selected&&n.push(i.device)}}catch(c){e={error:c}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(e)throw e.error}}this.devicesSelected.emit(n),this.errorMessage=""}else this.errorMessage="No devices selected"},e.decorators=[{type:i.Component,args:[{selector:"lib-device-selection",template:'<lib-content-box [title]="\'Select devices to configure\'" [limitWidth]="true">\r\n  <div class="toolbox mb-3">\r\n    <button class="btn btn-secondary" (click)="setAllSelectionsTo(true)">Select all</button>\r\n    <button class="btn btn-secondary" (click)="setAllSelectionsTo(false)">Unselect all</button>\r\n    <button class="btn btn-primary right">Connect a new device</button>\r\n  </div>\r\n  <div *ngIf="compatibleDevices.length > 0" class="row">\r\n    <div class="col-sm-12 col-md-4 pl-3 pr-3 p-2" *ngFor="let device of compatibleDevices">\r\n      <lib-device-selection-item [device]="device.device"\r\n                                 [(selected)]="device.selected"\r\n      ></lib-device-selection-item>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="compatibleDevices.length === 0">\r\n    <h2 class="text-center">No compatible devices connected.</h2>\r\n  </div>\r\n  <div class="toolbox mt-3">\r\n    <a routerLink="/netconf/tools" class="btn btn-danger">Cancel</a>\r\n    <button class="btn btn-primary right" (click)="submit()">Configure</button>\r\n  </div>\r\n  <p class="error-text text-right">{{errorMessage}}</p>\r\n</lib-content-box>\r\n\x3c!--<div class="box">\r\n  <div class="box-header">\r\n    Select devices to configure\r\n  </div>\r\n  <div class="box-content box-content-limited">\r\n\r\n  </div>\r\n</div>\r\n--\x3e\r\n',styles:['.btn{margin-right:5px}.box{margin-bottom:10px;background:#fff;border-radius:5px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.box-header{background:#008545;width:100%;font-size:1.5rem;border-radius:5px 5px 0 0;color:#fff;padding:5px 10px;text-align:center}.box-content{padding:5px 10px}.box-content-limited{max-width:1200px;margin-left:auto;margin-right:auto}.clickable{cursor:pointer}.clickable::-moz-selection{background:0 0;color:#231f20}.clickable::-moz-selection,.clickable::selection{background:0 0;color:#231f20}.error-text{color:#ee1d23}.checkbox-container{display:block;position:relative;padding-left:35px;margin-bottom:32px;cursor:pointer;font-size:22px;line-height:1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:150ms ease-in-out}.checkbox-container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkbox-container:hover input~.checkmark{background-color:#00b55d}.checkbox-container input:checked~.checkmark{background-color:#231f20}.checkbox-container input:checked~.checkmark:after{display:block}.checkbox-container .checkmark:after{left:7px;top:-1px;width:12px;height:22px;border:solid #fff;border-width:0 4px 4px 0;border-radius:2px;transform:rotate(45deg)}.checkmark{position:absolute;top:0;left:0;height:32px;width:32px;background-color:#fff;border:3px solid #231f20;border-radius:5px;transition:150ms ease-in-out}.checkmark:after{content:"";position:absolute;display:none}.device-selection-title{font-size:1.2em;margin-bottom:0}.device-name{font-weight:700;margin-right:.5rem}.device-item{cursor:pointer;border:2px solid #016d39;background:#fff;border-radius:5px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);margin-bottom:0}.hostname{font-size:.8em;white-space:nowrap;display:inline-block;color:rgba(35,31,32,.7)}.toolbox{width:100%}@media only screen and (min-width:600px){.toolbox{display:flex}}.toolbox .right{margin-left:auto}']}]}],e.ctorParameters=function(){return[{type:l}]},e.propDecorators={schemaFilter:[{type:i.Input}],devicesSelected:[{type:i.Output}]},e}(),x=function(){function e(){this.selectedChange=new i.EventEmitter,this.compatibleDevices=[]}return e.prototype.ngOnInit=function(){},e.prototype.changeSelection=function(){this.selectedChange.emit(!this.selected)},e.decorators=[{type:i.Component,args:[{selector:"lib-device-selection-item",template:'<div class="container-fluid device-item clickable" (click)="changeSelection()">\r\n  <div class="row p-2">\r\n    <div class="col-sm-9 col-md-10">\r\n      <p class="device-selection-title">\r\n        <span class="device-name"> {{device.hostname}}:{{device.port}}</span>\r\n        <span class="hostname" *ngIf="device.name">{{device.name}}</span>\r\n      </p>\r\n      <p class="mb-0">{{device.username}}</p>\r\n    </div>\r\n    <div class="col-sm-3 col-md-2">\r\n      <label class="checkbox-container">\r\n        <input type="checkbox" [checked]="selected" (change)="changeSelection(); $event.stopPropagation()">\r\n        <span class="checkmark"></span>\r\n      </label>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n',styles:['.btn{margin-right:5px}.box{margin-bottom:10px;background:#fff;border-radius:5px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.box-header{background:#008545;width:100%;font-size:1.5rem;border-radius:5px 5px 0 0;color:#fff;padding:5px 10px;text-align:center}.box-content{padding:5px 10px}.box-content-limited{max-width:1200px;margin-left:auto;margin-right:auto}.clickable{cursor:pointer}.clickable::-moz-selection{background:0 0;color:#231f20}.clickable::-moz-selection,.clickable::selection{background:0 0;color:#231f20}.error-text{color:#ee1d23}.checkbox-container{display:block;position:relative;padding-left:35px;margin-bottom:32px;cursor:pointer;font-size:22px;line-height:1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:150ms ease-in-out}.checkbox-container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkbox-container:hover input~.checkmark{background-color:#00b55d}.checkbox-container input:checked~.checkmark{background-color:#231f20}.checkbox-container input:checked~.checkmark:after{display:block}.checkbox-container .checkmark:after{left:7px;top:-1px;width:12px;height:22px;border:solid #fff;border-width:0 4px 4px 0;border-radius:2px;transform:rotate(45deg)}.checkmark{position:absolute;top:0;left:0;height:32px;width:32px;background-color:#fff;border:3px solid #231f20;border-radius:5px;transition:150ms ease-in-out}.checkmark:after{content:"";position:absolute;display:none}.device-selection-title{font-size:1.2em;margin-bottom:0}.device-name{font-weight:700;margin-right:.5rem}.device-item{cursor:pointer;border:2px solid #016d39;background:#fff;border-radius:5px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);margin-bottom:0}.hostname{font-size:.8em;white-space:nowrap;display:inline-block;color:rgba(35,31,32,.7)}.toolbox{width:100%}@media only screen and (min-width:600px){.toolbox{display:flex}}.toolbox .right{margin-left:auto}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={device:[{type:i.Input}],selected:[{type:i.Input}],selectedChange:[{type:i.Output}]},e}(),g=function(){function e(){this.title="",this.limitWidth=!1}return e.prototype.ngOnInit=function(){},e.decorators=[{type:i.Component,args:[{selector:"lib-content-box",template:'\n    <div class="content-box">\n      <div class="box-header" *ngIf="title">{{title}}</div>\n      <div class="box-content" [class.box-content-limited]="limitWidth">\n          <ng-content></ng-content>\n      </div>\n    </div>\n  ',styles:[".content-box{margin-bottom:10px;background:#fff;border-radius:5px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.box-header{background:#008545;width:100%;font-size:1.5rem;border-radius:5px 5px 0 0;color:#fff;padding:5px 10px;text-align:center}.box-content{padding:5px 10px}.box-content-limited{max-width:1200px;margin-left:auto;margin-right:auto}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={title:[{type:i.Input}],limitWidth:[{type:i.Input}]},e}(),v=function(){function e(){this.title="",this.toolbox=!0,this.submitBtnText="Submit",this.canceled=new i.EventEmitter,this.submitted=new i.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.cancel=function(){this.canceled.emit(!0)},e.prototype.submit=function(){this.submitted.emit(!0)},e.decorators=[{type:i.Component,args:[{selector:"lib-nc-popup",template:'\n    <div class="popup-wrapper">\n      <div class="popup-content">\n        <div *ngIf="title !== \'\'" class="popup-header">{{title}}</div>\n        <ng-content></ng-content>\n        <div class="popup-toolbox" *ngIf="toolbox">\n          <button class="btn btn-danger" (click)="cancel()">Cancel</button>\n          <button class="btn btn-primary float-right" (click)="submit()">{{submitBtnText}}</button>\n        </div>\n      </div>\n    </div>\n  ',styles:[".popup-wrapper{position:fixed;top:0;left:0;width:100vw;height:100vh;background:rgba(0,0,0,.7);z-index:9999}.popup-content{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:500px;max-width:100vw;padding:10px;background:#fff;border:3px solid #fff;border-radius:5px}.popup-header{width:calc(100% + 20px);margin:-10px -10px 10px;background:#008545;color:#fff;border-radius:5px 5px 0 0;padding:5px;font-size:1.3rem;text-align:center}.popup-toolbox{background:#fafafa;width:calc(100% + 20px);margin:10px -10px -20px;padding:10px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={title:[{type:i.Input}],toolbox:[{type:i.Input}],submitBtnText:[{type:i.Input}],canceled:[{type:i.Output}],submitted:[{type:i.Output}]},e}(),y=[f,m,h,x,g,v],k=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[o.CommonModule,r.RouterModule,c.HttpClientModule],declarations:b(y),exports:b(y),providers:[l]}]}],e}();e.NetconfLibService=p,e.ConfigurationService=s,e.DeviceService=l,e.SocketService=a,e.NetconfLibModule=k,e.ɵe=g,e.ɵb=m,e.ɵc=h,e.ɵf=v,e.ɵd=x,e.ɵa=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=netconf-lib.umd.min.js.map